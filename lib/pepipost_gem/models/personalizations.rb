# pepipost_gem
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PepipostGem
  # This consits of personlized attachments with recipient,recipient_cc,etc.
  class Personalizations < BaseModel
    # Emails to be passed in Apicall
    # @return [String]
    attr_accessor :recipient

    # Emails to be passed in Apicall
    # @return [String]
    attr_accessor :x_apiheader_cc

    # Emails to be passed in Apicall
    # @return [String]
    attr_accessor :x_apiheader

    # Emails to be passed in Apicall
    # @return [Object]
    attr_accessor :attributes

    # Emails to be passed in Apicall
    # @return [List of Attachments]
    attr_accessor :attachments

    # Emails to be passed in Apicall
    # @return [List of String]
    attr_accessor :recipient_cc

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['recipient'] = 'recipient'
      @_hash['x_apiheader_cc'] = 'x-apiheader_cc'
      @_hash['x_apiheader'] = 'x-apiheader'
      @_hash['attributes'] = 'attributes'
      @_hash['attachments'] = 'attachments'
      @_hash['recipient_cc'] = 'recipient_cc'
      @_hash
    end

    def initialize(recipient = nil,
                   x_apiheader_cc = nil,
                   x_apiheader = nil,
                   attributes = nil,
                   attachments = nil,
                   recipient_cc = nil)
      @recipient = recipient
      @x_apiheader_cc = x_apiheader_cc
      @x_apiheader = x_apiheader
      @attributes = attributes
      @attachments = attachments
      @recipient_cc = recipient_cc
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      recipient = hash['recipient']
      x_apiheader_cc = hash['x-apiheader_cc']
      x_apiheader = hash['x-apiheader']
      attributes = hash['attributes']
      # Parameter is an array, so we need to iterate through it
      attachments = nil
      unless hash['attachments'].nil?
        attachments = []
        hash['attachments'].each do |structure|
          attachments << (Attachments.from_hash(structure) if structure)
        end
      end
      recipient_cc = hash['recipient_cc']

      # Create object from extracted values.
      Personalizations.new(recipient,
                           x_apiheader_cc,
                           x_apiheader,
                           attributes,
                           attachments,
                           recipient_cc)
    end
  end
end
